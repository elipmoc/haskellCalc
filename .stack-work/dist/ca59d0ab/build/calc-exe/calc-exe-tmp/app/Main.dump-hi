
==================== FINAL INTERFACE ====================
2017-11-04 06:00:13.415361 UTC

interface main@main:Main 8002
  interface hash: c1f36315debf437c97e5fa1c34b54326
  ABI hash: baff4df1e763200fa7d5b96699dc1bde
  export-list hash: abdad30593acdd7d3c090b4c584d3b9c
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 956e38a2cb7097b9218b9b1e53d30d64
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: base-4.9.1.0*
                      calc-0.1.0.0@calc-0.1.0.0-2GAoZSqsBwD4vUUrejWOyc ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:GHC.Show eca5834daba3b6a2bbbe64ab52056707
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
import  -/  base-4.9.1.0:System.IO 5daf3f384209c11d9566e3409af8ec5d
import  -/  calc-0.1.0.0@calc-0.1.0.0-2GAoZSqsBwD4vUUrejWOyc:Lib 2cbc1441c5339fcc637fe80d95617ed1
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
4577f6c65d340f5f046c504f5bd6d06c
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
043d444d5a70d7fdde8507f1962a3965
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main4
                        GHC.Types.True
                        s of ds1 { (#,#) ipv ipv1 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   Main.main2
                   GHC.Types.True
                   ipv }) -}
c4c9e9a0087ec384cb0d950d3162a534
  main2 :: GHC.Base.String
  {- Unfolding: (case GHC.Show.$w$cshowsPrec1
                        0#
                        Main.main3
                        (GHC.Types.[] @ GHC.Types.Char) of ww2 { (#,#) ww3 ww4 ->
                 GHC.Types.: @ GHC.Types.Char ww3 ww4 }) -}
3960a021e711148cccec139420e727a8
  main3 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (45) -}
4c0d55de6d89e77795e816db09e911a0
  main4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows6
                   Main.main5) -}
19bf1f063da2a1eb42d928de26739ad5
  main5 :: GHC.Base.String
  {- Unfolding: (GHC.Show.showLitString Main.main7 Main.main6) -}
7c97626bcb77d4b1452d7b5bf93b3439
  main6 :: [GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows6
                   (GHC.Types.[] @ GHC.Types.Char)) -}
8c691cb82d979b28e7b72c0050175a60
  main7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "HelloWorld"#) -}
5130d2e6e711fad923d9dc120e4807b2
  main8 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

